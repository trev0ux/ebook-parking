trigger:
- main

resources:
- repo: self

variables:
  tag: 'latest'
  containerRegistry: 'registry.double.pt'
  image: 'ebookparking-nuxt-uat'
  container: $(image)
  NODE_ENV: 'development'
  UmbracoUrl : 'http://e-xplica-umbraco'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:

    - task: Docker@2
      displayName: Build Frontend
      inputs:
        containerRegistry: $(containerRegistry)
        repository: $(image)
        command: "build"
        Dockerfile: "**/Dockerfile"
        tags: |
          $(tag)
        arguments: "--build-arg NODE_ENV=$(NODE_ENV) --build-arg NUXT_PUBLIC_API_URL=$(UmbracoUrl) --build-arg STRIPE_PUBLIC_KEY=$(STRIPE_PUBLIC_KEY)"

    - task: Docker@2
      displayName: Push Frontend
      inputs:
        command: push
        repository: $(image)
        containerRegistry: $(containerRegistry)
        tags: |
          $(tag)
          

    - task: SSH@0
      inputs:
        sshEndpoint: 'SSH SSDNode'
        runOptions: 'inline'
        inline: |
          # Suppress STDERR messages,  
          cd /docker/clients/autostallingdebazuin

          docker kill $(container) || true
          docker rm $(container) || true
          docker image rm $(containerRegistry)/$(image) || true

          docker login -u azuredevops -p $(docker_login) $(containerRegistry)
          OUTPUT_MESSAGE=$(docker-compose up -d  2>&1)
          docker logout $(containerRegistry)
          
          #Handle exit code
          
          if [ $? -eq 0 ]
          then
            echo $OUTPUT_MESSAGE
            echo "Deployed successfully"
            exit 0
          else
            echo "Deployment failed" 
            echo $OUTPUT_MESSAGE
            exit 1
          fi
        failOnStdErr: false
        readyTimeout: '20000'
